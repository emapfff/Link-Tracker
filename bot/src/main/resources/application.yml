app:
  telegram-token: ${TELEGRAM_TOKEN}
  scrapper-topic:
    name: notification

kafka:
  consumer:
    bootstrap-servers: localhost:9092, localhost:9093
    client-id: bot
    auto-offset-reset: earliest
    max-poll-interval: 300_000
    enable-auto-commit: false
  dlq:
    topic: notification_dlq
    partitions: 2
    bootstrap-servers: localhost:9092, localhost:9093
    ack-mode: all
    delivery-timeout: 60s
    linger-ms: 5000

spring:
  application:
    name: bot
  jackson:
    time-zone: UTC

management:
  server:
    port: 8091
  endpoints:
    web:
      base-path: /
      exposure:
        include: health, info, prometheus
      path-mapping:
        prometheus: /metrics
  metrics:
    tags:
      application: ${spring.application.name}

rate-limiting:
  capacity: 3
  refill-rate: 100
  refill-time-seconds: 3600
  cache-size: 10_000
  expire-after-access: 2h

clients:
  scrapper:
    base-url: http://localhost:8080
    path:
      link: "/links"
      tgChat: "/tg-chat/"
    header:
      chatId: "Tg-Chat-Id"
    retry-policy:
      back-off-type: constant
      max-attempts: 2
      initial-interval: 1000


server:
  port: 8090

logging:
  config: classpath:log4j2-plain.xml

springdoc:
  swagger-ui:
    path: /swagger-ui/index.html
